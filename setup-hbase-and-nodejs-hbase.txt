1. sudo apt install openjdk-8-jdk
1.1. java -version
2. télécharger sur le fichier sur l'une des source ici : https://www.apache.org/dyn/closer.lua/hbase/2.3.3/hbase-2.3.3-bin.tar.gz
2.1. wget https://apache.mediamirrors.org/hbase/2.3.3/hbase-2.3.3-bin.tar.gz
3. déziper le dossier télécharger
3.1. tar -xvf hbase-2.3.3-bin.tar.gz
4. cd hbase/conf/
5. nano hbase-env.sh
6. decomment export JAVA_HOME et mettre le bon PATH
6.1. readlink -f $(which java)
6.2. /usr/lib/jvm/java-8-openjdk-amd64/
7. vérifier le fonctionnement
7.1. ./bin/start-hbase.sh
7.2. ./bin/hbase shell
7.3. create 'test', 'cf'
7.4. list 'test'
7.5. disable 'test'
7.6. drop 'test'
7.7. exit
7.8. ./bin/stop-hbase.sh
8. sudo apt install npm
8.1. npm install express
8.2. npm install python-shell
8.3. Documentation : https://github.com/extrabacon/python-shell
8.4. Créer un fichier test.js
let {PythonShell} = require('python-shell')

let options = {
	args: [1]
};

PythonShell.run('essai.py', options, function (err,results) {
	if (err) throw err;
	console.log('results: %j',results);
});
8.5. Créer un fichier essai.py dans le même dossier
import sys

try:
	i = sys.argv[1]
except:
	print("No argument")
	exit(1)
try:
	print(1+int(i))
except:
	print("Fail")
8.6. node test.js
9. Installer hbase-nodejs et ses dépendances
9.1. npm i node-addon-api
9.2. npm i bindings
9.3. pacman -S krb5 (?)
9.4. npm install krb5
9.5. npm install hbase
10. Start HBase avec REST connector
10.1. ./bin/start-hbase.sh
10.2. ./bin/hbase-daemon.sh start rest
11. Test fonctionnement de la librairie
11.1. ATTENTION si vous avez installés les libs sans l'option global,il faut travailler dans le dossier local où vous avez installés les libs.
11.2. Créer un fichier .js
11.3. Copier coller ça :
const hbase = require('hbase')
// Instantiate a new client
client = hbase({ host: '127.0.0.1', port: 8080 })
// Create a table
client
.table('my_table' )
.create('my_column_family', function(err, success){})
11.4. fermer le fichier
11.5. node <fichier>.js
11.6. Dans un navigateur web : http://localhost:8080/
11.7. Si tout a fonctionné, vous devez voir le nom de la table créé : my_table
12. Stop HBase avec REST connector
12.1. ./bin/hbase-daemon.sh stop rest
12.2. ./bin/stop-hbase.sh
13. sudo apt install python3-scrapy
13.1. cat > myspider.py <<EOF
import scrapy

class BlogSpider(scrapy.Spider):
    name = 'blogspider'
    start_urls = ['https://blog.scrapinghub.com']

    def parse(self, response):
        for title in response.css('.post-header>h2'):
            yield {'title': title.css('a ::text').get()}

        for next_page in response.css('a.next-posts-link'):
            yield response.follow(next_page, self.parse)

EOF
13.2. scrapy runspider myspider.py
